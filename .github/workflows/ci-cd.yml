name: Backend CI/CD Pipeline

on:
  push:
    branches:
      - main
      - connectVPS
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: secret
          MYSQL_DATABASE: healthconnect
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up PHP 8.2
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: pdo_mysql

      - name: Install dependencies
        run: |
          composer install --no-dev

      - name: Verify PHPUnit installation
        run: ls -l ./vendor/bin

      - name: Run backend tests
        run: |
          chmod +x vendor/bin/phpunit tests/MedicalFileControllerTest.php
          chmod +x vendor/bin/phpunit tests/RDVControllerTest.php
          chmod +x vendor/bin/phpunit tests/RoleControllerTest.php
          chmod +x vendor/bin/phpunit tests/UserControllerTest.php

  build:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          docker build -t healthconnect-backend:${{ github.sha }} .

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          password: ${{ secrets.VPS_PASSWORD }}
          script: |
            cd /var/www/HealthConnect/healthconnect-backend
            git pull
            docker stop backend || true
            docker rm backend || true
            docker run -d --name backend -p 3000:3000 healthconnect-backend:${{ github.sha }}
            # Assuming you use Composer on your server
            composer install --no-dev
            # Restart your PHP service if necessary, e.g., if you are using PHP-FPM:
            sudo systemctl restart php7.4-fpm
